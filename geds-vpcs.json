{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "GEDS core network creation across 2 AZs. Subnets, route tables, NACLs, IGW, NAT and security groups are created. NOTE: Template will only run in us-west-1, us-west-2, us-east-1 and eu-west-1",

  "Parameters" : {
    
    "NATInstanceType" : {
      "Description" : "NAT EC2 instance type, only m1.medium,m1.xlarge allowed",
      "Type" : "String",
      "Default" : "t1.micro",
      "AllowedValues" : [ "t1.micro","m1.medium","m1.xlarge" ]
    },

    "KeyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "255",
      "AllowedPattern" : "[\\x20-\\x7E]*",
      "ConstraintDescription" : "can contain only ASCII characters."
    },

    "CorporateCidrIp" : {
      "Description" : "Corporate CidrIp (to restrict traffic to only the corporate IP space)",
      "Type" : "String",
      "Default" :  "10.0.0.0/8"
    },

    "VPCCidr" : {
      "Description" : "CIDR block for entire VPC (e.g. 10.1.2.3/22)",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },

    "InternalLoadBalancerSubnetCidrAZ1" : {
      "Description" : "CIDR block for subnet containing the internal facing load balancers (e.g. 10.1.2.3/26)",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },

    "InternalLoadBalancerSubnetCidrAZ2" : {
      "Description" : "CIDR block for subnet containing the internal facing load balancers (e.g. 10.1.2.3/26)",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },

    "PresentationApplicationSubnetCidrAZ1" : {
      "Description" : "CIDR block for subnet containing the Web Servers (e.g. 10.1.2.3/25)",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },

    "PresentationApplicationSubnetCidrAZ2" : {
      "Description" : "CIDR block for subnet containing the Web Servers (e.g. 10.1.2.3/25)",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },

    "DatabaseSubnetCidrAZ1" : {
      "Description" : "CIDR block for subnet containing any databases (e.g. 10.1.2.3/25)",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },

    "DatabaseSubnetCidrAZ2" : {
      "Description" : "CIDR block for subnet containing any databases (e.g. 10.1.2.3/25)",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },

    "InternetLoadBalancerSubnetCidrAZ1" : {
      "Description" : "CIDR block for subnet containing the internet facing load balancers (e.g. 10.1.2.3/26)",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },

    "InternetLoadBalancerSubnetCidrAZ2" : {
      "Description" : "CIDR block for subnet containing the internet facing load balancers (e.g. 10.1.2.3/26)",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },

    "AppName" : {
      "Description" : "What is the name of the application? This is used to tag the resources",
      "Type": "String",
      "MinLength": "3",
      "MaxLength": "25",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },

    "EnvironmentName" : {
      "Description" : "What is the environment type, e.g. prd/stg/dev/tst/uat/poc.",
      "Type": "String",
      "MinLength": "3",
      "MaxLength": "3",
      "ConstraintDescription": "must me be 3 characters."
    }

  },
  
  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "t1.micro"   : { "Arch" : "64" },
      "m1.small"   : { "Arch" : "64" },
      "m1.medium"  : { "Arch" : "64" },
      "m1.large"   : { "Arch" : "64" },
      "m1.xlarge"  : { "Arch" : "64" },
      "m2.xlarge"  : { "Arch" : "64" },
      "m2.2xlarge" : { "Arch" : "64" },
      "m2.4xlarge" : { "Arch" : "64" },
      "m3.xlarge"  : { "Arch" : "64" },
      "m3.2xlarge" : { "Arch" : "64" },
      "c1.medium"  : { "Arch" : "64" },
      "c1.xlarge"  : { "Arch" : "64" }
    },
    "AWSRegionArch2AMI" : {
      "us-west-2"      : {"64" : "ami-f032acc0"},
      "us-west-1"      : {"64" : "ami-d69aad93"},
      "us-east-1"      : {"64" : "ami-ad227cc4"},
      "eu-west-1"      : {"64" : "ami-f3e30084"}
    }
  },

  "Resources" : {
     "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : { "Ref" : "VPCCidr" },
        "EnableDnsSupport" : "true",
        "EnableDnsHostnames" : "true",
        "Tags" : [
          { 
            "Key" : "Name",
            "Value" : { "Fn::Join" : [ "-", [ { "Ref" : "AppName" }, { "Ref" : "EnvironmentName" }] ] }
          },
          { 
            "Key" : "app",
            "Value" : { "Ref" : "AppName" }
          },
          { 
            "Key" : "stack",
            "Value" : { "Ref" : "EnvironmentName" }
          },
          { 
            "Key" : "layer",
            "Value" : "network"
          }
        ]
      }
    },

    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : { 
        "Tags" : [
          { 
            "Key" : "stack",
            "Value" : { "Ref" : "EnvironmentName" }
          },
          { 
            "Key" : "layer",
            "Value" : "network"
          }
        ]
      }
    },

    "AttachGateway" : {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
         "VpcId" : { "Ref" : "VPC" },
         "InternetGatewayId" : { "Ref" : "InternetGateway" }
       }
    },

    "InternalLoadBalancerSubnetAZ1" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "InternalLoadBalancerSubnetCidrAZ1" },
        "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" } ] },
        "Tags" : [
          { 
            "Key" : "purpose",
            "Value" : "internal load balancers"
          },
          { 
            "Key" : "stack",
            "Value" : { "Ref" : "EnvironmentName" }
          },
          { 
            "Key" : "network",
            "Value" : "internal"
          },
          { 
            "Key" : "Name",
            "Value" : "internal load balancers"
          }
        ]
      }
    },
    "InternalLoadBalancerSubnetAZ2" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "InternalLoadBalancerSubnetCidrAZ2" },
        "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" } ] },
        "Tags" : [
          { 
            "Key" : "purpose",
            "Value" : "internal load balancers"
          },
          { 
            "Key" : "stack",
            "Value" : { "Ref" : "EnvironmentName" }
          },
          { 
            "Key" : "network",
            "Value" : "internal"
          },
          { 
            "Key" : "Name",
            "Value" : "internal load balancers"
          }
        ]
      }
    },

    "PresentationApplicationSubnetAZ1" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "PresentationApplicationSubnetCidrAZ1" },
        "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" } ] },
        "Tags" : [
          { 
            "Key" : "purpose",
            "Value" : "presentation and application"
          },
          { 
            "Key" : "stack",
            "Value" : { "Ref" : "EnvironmentName" }
          },
          { 
            "Key" : "network",
            "Value" : "internal"
          },
          { 
            "Key" : "Name",
            "Value" : "PresentationApplication"
          }
        ]
      }
    },
    "PresentationApplicationSubnetAZ2" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "PresentationApplicationSubnetCidrAZ2" },
        "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" } ] },
        "Tags" : [
          { 
            "Key" : "purpose",
            "Value" : "presentation and application"
          },
          { 
            "Key" : "stack",
            "Value" : { "Ref" : "EnvironmentName" }
          },
          { 
            "Key" : "network",
            "Value" : "internal"
          },
          { 
            "Key" : "Name",
            "Value" : "PresentationApplication"
          }
        ]
      }
    },

    "DatabaseSubnetAZ1" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "DatabaseSubnetCidrAZ1" },
        "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" } ] },
        "Tags" : [
          { 
            "Key" : "purpose",
            "Value" : "cassandra"
          },
          { 
            "Key" : "stack",
            "Value" : { "Ref" : "EnvironmentName" }
          },
          { 
            "Key" : "network",
            "Value" : "internet"
          },
          { 
            "Key" : "Name",
            "Value" : "cassandra"
          }
        ]
      }
    },
    
    "DatabaseSubnetAZ2" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "DatabaseSubnetCidrAZ2" },
        "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" } ] },
        "Tags" : [
          { 
            "Key" : "purpose",
            "Value" : "cassandra"
          },
          { 
            "Key" : "stack",
            "Value" : { "Ref" : "EnvironmentName" }
          },
          { 
            "Key" : "network",
            "Value" : "internet"
          },
          { 
            "Key" : "Name",
            "Value" : "cassandra"
          }
        ]
      }
    },

    "InternetLoadBalancerSubnetAZ1" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "InternetLoadBalancerSubnetCidrAZ1" },
        "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" } ] },
        "Tags" : [
          { 
            "Key" : "purpose",
            "Value" : "internet load balancers"
          },
          { 
            "Key" : "stack",
            "Value" : { "Ref" : "EnvironmentName" }
          },
          { 
            "Key" : "network",
            "Value" : "internet"
          },
          { 
            "Key" : "Name",
            "Value" : "internet load balancers"
          }
        ]
      }
    },
    "InternetLoadBalancerSubnetAZ2" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "InternetLoadBalancerSubnetCidrAZ2" },
        "AvailabilityZone" : { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" } ] },
        "Tags" : [
          { 
            "Key" : "purpose",
            "Value" : "internet load balancers"
          },
          { 
            "Key" : "stack",
            "Value" : { "Ref" : "EnvironmentName" }
          },
          { 
            "Key" : "network",
            "Value" : "internet"
          },
          { 
            "Key" : "Name",
            "Value" : "internet load balancers"
          }
        ]
      }
    },

    "InternetRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [
          { 
            "Key" : "purpose",
            "Value" : "internet"
          },
          { 
            "Key" : "stack",
            "Value" : { "Ref" : "EnvironmentName" }
          },
          { 
            "Key" : "network",
            "Value" : "internet"
          }
        ]
      }
    },

    "InternalRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [
          { 
            "Key" : "purpose",
            "Value" : "internal"
          },
          { 
            "Key" : "stack",
            "Value" : { "Ref" : "EnvironmentName" }
          },
          { 
            "Key" : "network",
            "Value" : "internal"
          }
        ]
      }
    },

    "InternetRoute" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "InternetRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      }
    },

    "InternalRoute" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "InternalRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "InstanceId" : { "Ref" : "NAT" }
      }
    },

    "InternetLoadBalancersSubnetRouteTableAssociation1" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "InternetLoadBalancerSubnetAZ1" },
        "RouteTableId" : { "Ref" : "InternetRouteTable" }
      }
    },
    
    "InternetLoadBalancersSubnetRouteTableAssociation2" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "InternetLoadBalancerSubnetAZ2" },
        "RouteTableId" : { "Ref" : "InternetRouteTable" }
      }
    },
    
    "InternalLoadBalancersSubnetRouteTableAssociation1" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "InternalLoadBalancerSubnetAZ1" },
        "RouteTableId" : { "Ref" : "InternalRouteTable" }
      }
    },
    "InternalLoadBalancersSubnetRouteTableAssociation2" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "InternalLoadBalancerSubnetAZ2" },
        "RouteTableId" : { "Ref" : "InternalRouteTable" }
      }
    },

    "PresentationApplicationSubnetRouteTableAssociation1" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PresentationApplicationSubnetAZ1" },
        "RouteTableId" : { "Ref" : "InternalRouteTable" }
      }
    },
    "PresentationApplicationSubnetRouteTableAssociation2" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PresentationApplicationSubnetAZ2" },
        "RouteTableId" : { "Ref" : "InternalRouteTable" }
      }
    },

    "DatabaseSubnetRouteTableAssociation1" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "DatabaseSubnetAZ1" },
        "RouteTableId" : { "Ref" : "InternetRouteTable" }
      }
    },
    "DatabaseSubnetRouteTableAssociation2" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "DatabaseSubnetAZ2" },
        "RouteTableId" : { "Ref" : "InternetRouteTable" }
      }
    },

    "InternetSubnetAcl" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [
          { 
            "Key" : "layer",
            "Value" : "network"
          },
          { 
            "Key" : "purpose",
            "Value" : "internet"
          },
          { 
            "Key" : "stack",
            "Value" : { "Ref" : "EnvironmentName" }
          }
        ]
      }
    },
    "InternalSubnetAcl" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [
          { 
            "Key" : "layer",
            "Value" : "network"
          },
          { 
            "Key" : "purpose",
            "Value" : "internal"
          },
          { 
            "Key" : "stack",
            "Value" : { "Ref" : "EnvironmentName" }
          }
        ]
      }
    },

    "InternetInSubnetAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "InternetSubnetAcl"},
        "RuleNumber" : "32000",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "Icmp" : { "Code" : "-1", "Type" : "-1"},
        "PortRange" : {"From" : "1", "To" : "65535"}
      }
    },
    
    "InternetOutSubnetAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "InternetSubnetAcl"},
        "RuleNumber" : "32000",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "Icmp" : { "Code" : "-1", "Type" : "-1"},
        "PortRange" : {"From" : "1", "To" : "65535"}
      }
    },
    
    "InternalInSubnetAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "InternalSubnetAcl"},
        "RuleNumber" : "32000",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "Icmp" : { "Code" : "-1", "Type" : "-1"},
        "PortRange" : {"From" : "1", "To" : "65535"}
      }
    },
    
    "InternalOutSubnetAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "InternalSubnetAcl"},
        "RuleNumber" : "32000",
        "Protocol" : "-1",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "Icmp" : { "Code" : "-1", "Type" : "-1"},
        "PortRange" : {"From" : "1", "To" : "65535"}
      }
    },
    
    "InternetSubnetAclAssociation1" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "InternetLoadBalancerSubnetAZ1" },
        "NetworkAclId" : {"Ref" : "InternetSubnetAcl"}
      }
    },

    "InternetSubnetAclAssociation2" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "InternetLoadBalancerSubnetAZ2" },
        "NetworkAclId" : {"Ref" : "InternetSubnetAcl"}
      }
    },

    "InternetSubnetAclAssociation3" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "DatabaseSubnetAZ1" },
        "NetworkAclId" : {"Ref" : "InternetSubnetAcl"}
      }
    },

    "InternetSubnetAclAssociation4" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "DatabaseSubnetAZ2" },
        "NetworkAclId" : {"Ref" : "InternetSubnetAcl"}
      }
    },

    "InternalSubnetAclAssociation1" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PresentationApplicationSubnetAZ1" },
        "NetworkAclId" : {"Ref" : "InternalSubnetAcl"}
      }
    },

    "InternalSubnetAclAssociation2" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PresentationApplicationSubnetAZ2" },
        "NetworkAclId" : {"Ref" : "InternalSubnetAcl"}
      }
    },

    "InternalSubnetAclAssociation3" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "InternalLoadBalancerSubnetAZ1" },
        "NetworkAclId" : {"Ref" : "InternalSubnetAcl"}
      }
    },

    "InternalSubnetAclAssociation4" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "InternalLoadBalancerSubnetAZ2" },
        "NetworkAclId" : {"Ref" : "InternalSubnetAcl"}
      }
    },

    "NAT" : {
      "Type" : "AWS::EC2::Instance",
      "DependsOn" : "InternetGateway",
      "Metadata" : {
        "Comment1" : "Install the latest software patches and security updates",
        "AWS::CloudFormation::Init" : {
          "config" : {
            "commands" : {
              "a1" : {
                "command" : "/usr/bin/yum update -y"
              }
            }
          }
        }
      },
      "Properties" : { 
        "InstanceType" : { "Ref" : "NATInstanceType" },
        "ImageId" : {
          "Fn::FindInMap" : [
            "AWSRegionArch2AMI",
            {
              "Ref" : "AWS::Region"
            },
            {
              "Fn::FindInMap" : [
                "AWSInstanceType2Arch",
                {
                  "Ref" : "NATInstanceType"
                },
                "Arch"
              ]
            }
          ]
        },
        "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/bash -v\n",
          "yum update -y aws-cfn-bootstrap\n",

          "# Helper function\n",
          "function error_exit {\n",
          "  echo $1\n",
          "}\n",
          "/opt/aws/bin/cfn-init -s ", { "Ref" : "AWS::StackId" }, " -r NAT ",
          "    --region ", { "Ref" : "AWS::Region" }, " || error_exit 'Failed to run cfn-init'\n",

          "# Update latest security patches\n",
          "yum update -y\n"
          ]]}
        },
        "SourceDestCheck" : "false",
        "DisableApiTermination" : "true",
        "Monitoring" : "false",
        "KeyName" : { "Ref" : "KeyName" },
        "NetworkInterfaces" : [{
          "GroupSet"                 : [{ "Ref" : "NATSG" }],
          "AssociatePublicIpAddress" : "true",
          "DeviceIndex"              : "0",
          "DeleteOnTermination"      : "true",
          "SubnetId"                 : { "Ref" : "InternetLoadBalancerSubnetAZ2" }
        }],
        "Tags" : [
          { 
            "Key" : "stack",
            "Value" : { "Ref" : "EnvironmentName" }
          },
          { 
            "Key" : "layer",
            "Value" : "network"
          },
          { 
            "Key" : "Name",
            "Value" : { "Fn::Join" : [ "-", [ "NAT", { "Ref" : "EnvironmentName" }] ] }
          }
        ]
      }
    },
    
   "NATSG" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "NAT Security Group",
        "VpcId" : {"Ref" : "VPC"},
        "SecurityGroupIngress" : [ 
          { "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : { "Ref" : "VPCCidr" } },
          { "IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "CidrIp" : { "Ref" : "VPCCidr" } },
          { "IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "SourceSecurityGroupId" : { "Ref" : "ManagementSG" } },
          { "IpProtocol" : "icmp", "FromPort" : "-1", "ToPort" : "-1", "SourceSecurityGroupId" : { "Ref" : "ManagementSG" } }
        ],
        "Tags" : [
          { 
            "Key" : "purpose",
            "Value" : "NAT"
          },
          { 
            "Key" : "stack",
            "Value" : { "Ref" : "EnvironmentName" }
          },
          { 
            "Key" : "app",
            "Value" : { "Ref" : "AppName" }
          }
        ]
      }
    },

    "ManagementSG" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Management access from Corporate Network",
        "VpcId" : {"Ref" : "VPC"},
        "SecurityGroupIngress" : [ 
          { "IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref" : "CorporateCidrIp" } },
          { "IpProtocol" : "tcp", "FromPort" : "3389", "ToPort" : "3389", "CidrIp" : { "Ref" : "CorporateCidrIp" } },
          { "IpProtocol" : "icmp", "FromPort" : "-1", "ToPort" : "-1", "CidrIp" : { "Ref" : "CorporateCidrIp" } }
        ],
        "Tags" : [
          { 
            "Key" : "purpose",
            "Value" : "Management"
          },
          { 
            "Key" : "stack",
            "Value" : { "Ref" : "EnvironmentName" }
          },
          { 
            "Key" : "app",
            "Value" : { "Ref" : "AppName" }
          }
        ]
      }
    }

  },
  
  "Outputs" : {

    "VPC" : {
      "Description" : "VPC",
      "Value" : {"Ref" : "VPC"}
    },

    "InternetSubnets" : {
      "Description" : "Internet Subnets",
      "Value" : { "Fn::Join":["", [
			{"Ref" : "InternetLoadBalancerSubnetAZ1" }, " (in ", {"Fn::GetAtt" : [ "InternetLoadBalancerSubnetAZ1", "AvailabilityZone" ] }, "), ",
			{"Ref" : "InternetLoadBalancerSubnetAZ2" }, " (in ", {"Fn::GetAtt" : [ "InternetLoadBalancerSubnetAZ2", "AvailabilityZone" ] }, "), ",
      {"Ref" : "DatabaseSubnetAZ1" }, " (in ", {"Fn::GetAtt" : [ "DatabaseSubnetAZ1", "AvailabilityZone" ] }, "), ",
      {"Ref" : "DatabaseSubnetAZ2" }, " (in ", {"Fn::GetAtt" : [ "DatabaseSubnetAZ2", "AvailabilityZone" ] }, ")"
        ]]}
    },

    "InternalSubnets" : {
      "Description" : "Internal Subnets",
      "Value" : { "Fn::Join":["", [
			{"Ref" : "PresentationApplicationSubnetAZ1" }, " (in ", {"Fn::GetAtt" : [ "PresentationApplicationSubnetAZ1", "AvailabilityZone" ] }, "), ",
			{"Ref" : "PresentationApplicationSubnetAZ2" }, " (in ", {"Fn::GetAtt" : [ "PresentationApplicationSubnetAZ2", "AvailabilityZone" ] }, "), ",
      {"Ref" : "InternalLoadBalancerSubnetAZ1" }, " (in ", {"Fn::GetAtt" : [ "InternalLoadBalancerSubnetAZ1", "AvailabilityZone" ] }, "), ",
      {"Ref" : "InternalLoadBalancerSubnetAZ2" }, " (in ", {"Fn::GetAtt" : [ "InternalLoadBalancerSubnetAZ2", "AvailabilityZone" ] }, ")"
        ]]}
    },

    "ManagementSG" : {
      "Description" : "Management Security Group",
      "Value" : { "Ref" : "ManagementSG" }
    }

  }


}
